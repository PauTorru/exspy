
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/model_fitting/EELS_curve_fitting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_model_fitting_EELS_curve_fitting.py:


EELS curve fitting
==================

Performs curve fitting to an EELS spectrum, plots the result and saves it as
png file.

.. GENERATED FROM PYTHON SOURCE LINES 9-24



.. image-sg:: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :alt: coreloss_spectrum Signal
   :srcset: /auto_examples/model_fitting/images/sphx_glr_EELS_curve_fitting_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]      0%|                                     | 12.3k/42.3M [00:00<08:19, 84.6kB/s]      0%|                                      | 28.7k/42.3M [00:00<06:59, 101kB/s]      0%|                                      | 77.8k/42.3M [00:00<03:22, 209kB/s]      0%|                                       | 118k/42.3M [00:00<03:00, 234kB/s]      0%|▏                                      | 163k/42.3M [00:00<02:41, 261kB/s]      1%|▏                                      | 270k/42.3M [00:00<01:39, 423kB/s]      1%|▍                                      | 503k/42.3M [00:01<00:51, 805kB/s]      2%|▊                                     | 945k/42.3M [00:01<00:27, 1.51MB/s]      4%|█▋                                   | 1.86M/42.3M [00:01<00:13, 3.00MB/s]      9%|███▏                                 | 3.69M/42.3M [00:01<00:06, 5.94MB/s]     16%|█████▉                               | 6.78M/42.3M [00:01<00:03, 10.6MB/s]     20%|███████▎                             | 8.38M/42.3M [00:01<00:03, 9.57MB/s]     22%|████████▏                            | 9.36M/42.3M [00:01<00:03, 9.45MB/s]     24%|█████████                            | 10.3M/42.3M [00:02<00:03, 8.18MB/s]     26%|█████████▊                           | 11.1M/42.3M [00:02<00:03, 8.06MB/s]     28%|██████████▌                          | 12.0M/42.3M [00:02<00:03, 8.10MB/s]     31%|███████████▎                         | 12.9M/42.3M [00:02<00:03, 8.09MB/s]     33%|████████████                         | 13.8M/42.3M [00:02<00:03, 7.80MB/s]     34%|████████████▋                        | 14.5M/42.3M [00:02<00:03, 7.31MB/s]     36%|█████████████▎                       | 15.3M/42.3M [00:02<00:03, 7.11MB/s]     38%|██████████████▏                      | 16.3M/42.3M [00:02<00:03, 7.69MB/s]     41%|███████████████▏                     | 17.4M/42.3M [00:03<00:03, 7.82MB/s]     43%|███████████████▉                     | 18.3M/42.3M [00:03<00:03, 7.92MB/s]     46%|█████████████████                    | 19.5M/42.3M [00:03<00:02, 8.82MB/s]     49%|██████████████████                   | 20.6M/42.3M [00:03<00:02, 9.34MB/s]     51%|███████████████████                  | 21.8M/42.3M [00:03<00:02, 9.98MB/s]     54%|███████████████████▉                 | 22.8M/42.3M [00:03<00:01, 10.2MB/s]     56%|████████████████████▉                | 23.9M/42.3M [00:03<00:01, 10.0MB/s]     59%|█████████████████████▊               | 24.9M/42.3M [00:03<00:01, 8.89MB/s]     62%|██████████████████████▊              | 26.1M/42.3M [00:03<00:01, 9.45MB/s]     65%|████████████████████████             | 27.5M/42.3M [00:04<00:01, 10.6MB/s]     69%|█████████████████████████▍           | 29.0M/42.3M [00:04<00:01, 10.7MB/s]     72%|██████████████████████████▌          | 30.3M/42.3M [00:04<00:01, 11.1MB/s]     75%|███████████████████████████▉         | 31.9M/42.3M [00:04<00:00, 12.1MB/s]     79%|█████████████████████████████▏       | 33.4M/42.3M [00:04<00:00, 11.6MB/s]     83%|██████████████████████████████▌      | 34.9M/42.3M [00:04<00:00, 12.6MB/s]     86%|████████████████████████████████     | 36.6M/42.3M [00:04<00:00, 12.2MB/s]     91%|█████████████████████████████████▍   | 38.3M/42.3M [00:04<00:00, 13.4MB/s]     95%|███████████████████████████████████▏ | 40.2M/42.3M [00:04<00:00, 13.6MB/s]     98%|████████████████████████████████████▍| 41.6M/42.3M [00:05<00:00, 13.6MB/s]      0%|                                              | 0.00/42.3M [00:00<?, ?B/s]    100%|██████████████████████████████████████| 42.3M/42.3M [00:00<00:00, 292GB/s]






|

.. code-block:: default


    import hyperspy.api as hs

    s = hs.load("coreloss_spectrum.msa", signal_type="EELS")
    ll = hs.load("lowloss_spectrum.msa", signal_type="EELS")

    s.add_elements(("Mn", "O"))
    s.set_microscope_parameters(
        beam_energy=300, convergence_angle=24.6, collection_angle=13.6
    )

    m = s.create_model(low_loss=ll)
    m.enable_fine_structure()
    m.multifit(kind="smart")
    m.plot()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 11.946 seconds)


.. _sphx_glr_download_auto_examples_model_fitting_EELS_curve_fitting.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: EELS_curve_fitting.py <EELS_curve_fitting.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: EELS_curve_fitting.ipynb <EELS_curve_fitting.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
